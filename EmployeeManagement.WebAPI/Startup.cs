using System;
using System.Reflection;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Swashbuckle.AspNetCore.Swagger;
using EmployeeManagement.Application.Validators;
using MediatR;
using EmployeeManagement.Persistence.ContextClass;
using Microsoft.EntityFrameworkCore;
using System.IO;
using EmployeeManagement.Application.Commands;
using FluentValidation.AspNetCore;

namespace EmployeeManagement.WebAPI
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            //Register fluent validations
            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2)
                .AddFluentValidation(fv => fv.RegisterValidatorsFromAssemblyContaining<AddEmployeeCommand>());

            //Register swagger
            services.AddSwaggerGen(c =>
            {
                c.SwaggerDoc("v1", new Info { Title = "Employee Management API", Version = "v1" });

                //Locate the XML file being generated by ASP.NET Core
                var xmlFile = $"{Assembly.GetExecutingAssembly().GetName().Name}.XML";
                var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);
                c.IncludeXmlComments(xmlPath);
            });

            //Allow cors
            services.AddCors(option => option.AddPolicy("Origin", builder =>
            {
                builder.AllowAnyOrigin().AllowAnyHeader().AllowAnyMethod();

            }));

            //Register mediatr
            services.AddMediatR(Assembly.GetExecutingAssembly());
            services.AddMediatR(typeof(AddEmployeeCommandHandler).Assembly);

            //Register DbContext
            services.AddDbContext<EmployeeDevContext>(options => options.UseSqlServer(Configuration.GetConnectionString("Employee-Dev")));
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            else
            {
                // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
                app.UseHsts();
            }

            app.UseCors("Origin");
            app.UseSwagger();
            app.UseSwaggerUI(c => {
                c.SwaggerEndpoint("/swagger/v1/swagger.json", "Employee Management API");
            });

            app.UseHttpsRedirection();
            app.UseMvc();
        }
    }
}
